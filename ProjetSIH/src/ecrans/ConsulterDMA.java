/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ecrans;

import GestionBDD.*;
import java.util.ArrayList;
import javax.swing.DefaultListModel;

/**
 *
 * @author lisad
 */
public class ConsulterDMA extends javax.swing.JFrame {

    private static PersonnelHospitalier employe;
    private static Patients patient;
    private DossierMedicoAdministratifDAO phd;
    private ArrayList<DossierMedicoAdministratif> resultat;
    private String ipp, noSejour;
    private ArrayList<Prestations> prestations;

    /**
     * Creates new form DossierMedicoAdministratif
     *
     * @param personnel
     * @param patient
     */
    public ConsulterDMA(PersonnelHospitalier personnel, Patients patient) {
        initComponents();

        employe = personnel;
        this.patient = patient;

        jLabelNomPmed.setText(personnel.getNomph());
        jLabelPrenomPmed.setText(personnel.getPrenomph());
        jLabelFonction.setText(personnel.getFonction());
        jLabelService.setText(personnel.getService());

        jLabel1Nomp.setText(patient.getNompatient());
        jLabel2PrenomP.setText(patient.getPrenompatient());
        jLabel4DateP.setText(patient.getDateDeNaissance());
        jLabel3Sexep.setText(patient.getSexe());

        // definition du contenu des jlist
        phd = new DossierMedicoAdministratifDAO(BDDconnection.getInstance());
        ipp = (patient.getIpp().substring(1, patient.getIpp().length() - 1));
        noSejour = phd.getDernierNumeroSejour(ipp);

        resultat = phd.findSer(ipp, noSejour, personnel.getService()); // ici utiliser la bonne fonction avec uniquement ipp et service car on veut afficher tous les séjours 

        DefaultListModel num = new DefaultListModel();
        DefaultListModel type = new DefaultListModel();
        DefaultListModel date = new DefaultListModel();

        resultat.stream().map((i) -> {
            num.addElement(i.getNosejour());
            System.out.println("dans la boucle");
            System.out.println(i.getNosejour());
            return i;
        }).map((i) -> {
            date.addElement(i.getDateentree());
            System.out.println(i.getDateentree());

            return i;
        }).forEachOrdered((i) -> {
            type.addElement(i.getType());
            System.out.println(i.getType());

        });

        this.jListDate.setModel(date);
        this.jListNoSejour.setModel(num);
        this.jListType.setModel(type);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JPanelEnTeteMedTech = new javax.swing.JPanel();
        jLabelFonction = new javax.swing.JLabel();
        jLabelNomPmed = new javax.swing.JLabel();
        jLabelPrenomPmed = new javax.swing.JLabel();
        jButtonDeconnexion = new javax.swing.JButton();
        jButtonAccueil = new javax.swing.JButton();
        jLabelService = new javax.swing.JLabel();
        DMA = new javax.swing.JPanel();
        listech = new javax.swing.JLabel();
        jScrollPane1ListeSejour = new javax.swing.JScrollPane();
        jListNoSejour = new javax.swing.JList<>();
        jLabel1Nosejour = new javax.swing.JLabel();
        jLabel2Type = new javax.swing.JLabel();
        jLabel3Date = new javax.swing.JLabel();
        jScrollPane2ListeType = new javax.swing.JScrollPane();
        jListType = new javax.swing.JList<>();
        jScrollPane3ListeDate = new javax.swing.JScrollPane();
        jListDate = new javax.swing.JList<>();
        jLabel1Prenom = new javax.swing.JLabel();
        jLabel2DateDeNaissance = new javax.swing.JLabel();
        jLabel2PrenomP = new javax.swing.JLabel();
        jLabel4DateP = new javax.swing.JLabel();
        jLabel2Nom = new javax.swing.JLabel();
        jLabel1Nomp = new javax.swing.JLabel();
        jLabel2Sexe = new javax.swing.JLabel();
        jLabel3Sexep = new javax.swing.JLabel();
        jLabel1InfoPatients = new javax.swing.JLabel();
        jButtonTrier = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(200, 200));
        setPreferredSize(new java.awt.Dimension(1000, 1000));
        setResizable(false);
        getContentPane().setLayout(null);

        JPanelEnTeteMedTech.setBackground(new java.awt.Color(65, 131, 215));
        JPanelEnTeteMedTech.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelFonction.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabelNomPmed.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabelNomPmed.setText("Nom");

        jLabelPrenomPmed.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabelPrenomPmed.setText("Prénom");

        jButtonDeconnexion.setBackground(new java.awt.Color(228, 241, 254));
        jButtonDeconnexion.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        jButtonDeconnexion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Deconnexion 2.PNG"))); // NOI18N
        jButtonDeconnexion.setText("Déconnexion");
        jButtonDeconnexion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeconnexionActionPerformed(evt);
            }
        });

        jButtonAccueil.setBackground(new java.awt.Color(228, 241, 254));
        jButtonAccueil.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        jButtonAccueil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Accueil 2.PNG"))); // NOI18N
        jButtonAccueil.setText("Accueil");
        jButtonAccueil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAccueilActionPerformed(evt);
            }
        });

        jLabelService.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabelService.setText("Service");

        javax.swing.GroupLayout JPanelEnTeteMedTechLayout = new javax.swing.GroupLayout(JPanelEnTeteMedTech);
        JPanelEnTeteMedTech.setLayout(JPanelEnTeteMedTechLayout);
        JPanelEnTeteMedTechLayout.setHorizontalGroup(
            JPanelEnTeteMedTechLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPanelEnTeteMedTechLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonAccueil)
                .addGap(35, 35, 35)
                .addGroup(JPanelEnTeteMedTechLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelPrenomPmed)
                    .addGroup(JPanelEnTeteMedTechLayout.createSequentialGroup()
                        .addComponent(jLabelNomPmed)
                        .addGap(146, 146, 146)
                        .addComponent(jLabelFonction)))
                .addGap(353, 353, 353)
                .addComponent(jLabelService)
                .addGap(18, 18, 18)
                .addComponent(jButtonDeconnexion, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(229, 229, 229))
        );
        JPanelEnTeteMedTechLayout.setVerticalGroup(
            JPanelEnTeteMedTechLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPanelEnTeteMedTechLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(JPanelEnTeteMedTechLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JPanelEnTeteMedTechLayout.createSequentialGroup()
                        .addGroup(JPanelEnTeteMedTechLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelFonction, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelNomPmed))
                        .addGap(18, 18, 18)
                        .addComponent(jLabelPrenomPmed, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(JPanelEnTeteMedTechLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(JPanelEnTeteMedTechLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonAccueil, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonDeconnexion, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelService))))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        getContentPane().add(JPanelEnTeteMedTech);
        JPanelEnTeteMedTech.setBounds(0, 0, 1190, 113);

        DMA.setBackground(new java.awt.Color(255, 255, 255));
        DMA.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        DMA.setLayout(null);

        listech.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        listech.setText("Listes des consultations et des hospitalisations ");
        DMA.add(listech);
        listech.setBounds(280, 140, 350, 41);

        jListNoSejour.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jListNoSejour.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListNoSejourMouseClicked(evt);
            }
        });
        jScrollPane1ListeSejour.setViewportView(jListNoSejour);

        DMA.add(jScrollPane1ListeSejour);
        jScrollPane1ListeSejour.setBounds(40, 260, 200, 270);

        jLabel1Nosejour.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        jLabel1Nosejour.setText("N° de séjour ");
        DMA.add(jLabel1Nosejour);
        jLabel1Nosejour.setBounds(40, 220, 86, 27);

        jLabel2Type.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        jLabel2Type.setText("Type");
        DMA.add(jLabel2Type);
        jLabel2Type.setBounds(400, 220, 86, 27);

        jLabel3Date.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        jLabel3Date.setText("Date");
        DMA.add(jLabel3Date);
        jLabel3Date.setBounds(750, 220, 86, 27);

        jListType.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jListType.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListTypeMouseClicked(evt);
            }
        });
        jScrollPane2ListeType.setViewportView(jListType);

        DMA.add(jScrollPane2ListeType);
        jScrollPane2ListeType.setBounds(400, 260, 180, 270);

        jListDate.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jListDate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListDateMouseClicked(evt);
            }
        });
        jScrollPane3ListeDate.setViewportView(jListDate);

        DMA.add(jScrollPane3ListeDate);
        jScrollPane3ListeDate.setBounds(750, 260, 180, 270);

        jLabel1Prenom.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel1Prenom.setText("Prénom : ");
        DMA.add(jLabel1Prenom);
        jLabel1Prenom.setBounds(80, 90, 55, 14);

        jLabel2DateDeNaissance.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel2DateDeNaissance.setText("Date de Naissance : ");
        DMA.add(jLabel2DateDeNaissance);
        jLabel2DateDeNaissance.setBounds(550, 80, 106, 24);

        jLabel2PrenomP.setText("jLabel1");
        DMA.add(jLabel2PrenomP);
        jLabel2PrenomP.setBounds(250, 90, 77, 14);

        jLabel4DateP.setText("jLabel1");
        DMA.add(jLabel4DateP);
        jLabel4DateP.setBounds(720, 80, 77, 14);

        jLabel2Nom.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel2Nom.setText("Nom : ");
        DMA.add(jLabel2Nom);
        jLabel2Nom.setBounds(80, 60, 55, 24);

        jLabel1Nomp.setText("jLabel1");
        DMA.add(jLabel1Nomp);
        jLabel1Nomp.setBounds(250, 60, 77, 14);

        jLabel2Sexe.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel2Sexe.setText("Sexe :");
        DMA.add(jLabel2Sexe);
        jLabel2Sexe.setBounds(550, 50, 43, 24);

        jLabel3Sexep.setText("jLabel1");
        DMA.add(jLabel3Sexep);
        jLabel3Sexep.setBounds(720, 50, 77, 14);

        jLabel1InfoPatients.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        jLabel1InfoPatients.setText("Informations du patient ");
        DMA.add(jLabel1InfoPatients);
        jLabel1InfoPatients.setBounds(320, 20, 180, 17);

        jButtonTrier.setText("Trier par dates croissantes");
        DMA.add(jButtonTrier);
        jButtonTrier.setBounds(330, 580, 200, 40);

        getContentPane().add(DMA);
        DMA.setBounds(0, 110, 1190, 650);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAccueilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAccueilActionPerformed

        int index = jListNoSejour.getSelectedIndex();

        ObservationsDAO obs = new ObservationsDAO(BDDconnection.getInstance());
        ArrayList<Observations> ob;
        ob = obs.findIpp(ipp);
        DefaultListModel observations = new DefaultListModel();
        ob.forEach((i) -> {
            observations.addElement(i.getNomacte() + "    " + i.getDateObservation());
        });

        PrescriptionsDAO presc = new PrescriptionsDAO(BDDconnection.getInstance());
        ArrayList<Prescriptions> pr;
        pr = presc.findIpp(ipp);
        DefaultListModel prescriptions = new DefaultListModel();
        pr.forEach((i) -> {
            prescriptions.addElement(i.getIdprescription() + "    " + i.getDateprescription());
        }); // 4 espaces

        OperationsDAO ope = new OperationsDAO(BDDconnection.getInstance());
        ArrayList<Operations> op;
        op = ope.findIpp(ipp);
        DefaultListModel operations = new DefaultListModel();
        op.forEach((i) -> {
            operations.addElement(i.getOperation() + "    " + i.getDateoperation());
        });

        ResultatsDAO res = new ResultatsDAO(BDDconnection.getInstance());
        ArrayList<Resultats> re;
        re = res.findIpp(ipp);
        DefaultListModel result = new DefaultListModel();
        re.forEach((i) -> {
            result.addElement(i.getPrestationmt() + "    " + i.getDateResultat());
        });

        if ("Urgence".equals(employe.getService())) {

            MedUrgenceAccueil inte = new MedUrgenceAccueil(employe, patient, ob);
            inte.setSize(this.getSize());
            inte.setLocationRelativeTo(this);
            this.dispose();
            inte.setVisible(true);
            inte.getjListPrescriptions().setModel(prescriptions);
            inte.getjListObservations().setModel(observations);
        } else if ("Radiologie".equals(employe.getService())) {

            MedRadioAccueil inte = new MedRadioAccueil(employe, patient, ob, re, pr);
            inte.setSize(this.getSize());
            inte.setLocationRelativeTo(this);
            this.dispose();
            inte.setVisible(true);
            inte.getjListObservations().setModel(observations);
            inte.getjListResultats().setModel(result);

        } else if ("Anesthesie".equals(employe.getService())) {

            MedAnestAccueil inte = new MedAnestAccueil(employe, patient, ob, re, pr);
            inte.setSize(this.getSize());
            inte.setLocationRelativeTo(this);
            this.dispose();
            inte.setVisible(true);

            inte.getjListPrescriptions().setModel(prescriptions);
            inte.getjListObservations().setModel(observations);
            inte.getjListResultats().setModel(result);
        } else if ("Laboratoire d'analyse".equals(employe.getService()) || "Hematologie".equals(employe.getService()) || "Anapathologie".equals(employe.getService())) {

            MedTechAccueil inte = new MedTechAccueil(employe, patient, ob, re, pr);
            inte.setSize(this.getSize());
            inte.setLocationRelativeTo(this);
            this.dispose();
            inte.setVisible(true);

            inte.getjListPrescriptions().setModel(prescriptions);
            inte.getjListObservations().setModel(observations);
            inte.getjListResultats().setModel(result);
        } else {
            MedClinAccueil inte = new MedClinAccueil(employe, patient, ob, re);
            inte.setSize(this.getSize());
            inte.setLocationRelativeTo(this);
            this.dispose();
            inte.setVisible(true);
            inte.getjListPrescriptions().setModel(prescriptions);
            inte.getjListObservations().setModel(observations);
            inte.getjListResultats().setModel(result);

        }

    }//GEN-LAST:event_jButtonAccueilActionPerformed

    private void jButtonDeconnexionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeconnexionActionPerformed
        Identification id = new Identification();
        id.setSize(this.getSize());
        id.setLocationRelativeTo(this);
        id.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_jButtonDeconnexionActionPerformed

    private void jListNoSejourMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListNoSejourMouseClicked
        int index = jListNoSejour.getSelectedIndex();
        PrestationsDAO prest = new PrestationsDAO(BDDconnection.getInstance());
        prestations = prest.find(ipp, noSejour);
        DefaultListModel presta = new DefaultListModel();
        prestations.forEach((i) -> {
            presta.addElement(i.getPrestation() + "    " + i.getDatePrestation());
        });

        NoSejour id = new NoSejour(employe, patient, this, resultat.get(index));
        id.getjListPrestations().setModel(presta);
        id.setSize(this.getSize());
        id.setLocationRelativeTo(this);
        id.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jListNoSejourMouseClicked

    private void jListTypeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListTypeMouseClicked
        int index = jListType.getSelectedIndex();
        PrestationsDAO prest = new PrestationsDAO(BDDconnection.getInstance());
        prestations = prest.find(ipp, noSejour);
        DefaultListModel presta = new DefaultListModel();
        prestations.forEach((i) -> {
            presta.addElement(i.getPrestation() + "    " + i.getDatePrestation());
        });

        NoSejour id = new NoSejour(employe, patient, this, resultat.get(index));
        id.getjListPrestations().setModel(presta);
        id.setSize(this.getSize());
        id.setLocationRelativeTo(this);
        id.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jListTypeMouseClicked

    private void jListDateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListDateMouseClicked
        int index = jListDate.getSelectedIndex();
        PrestationsDAO prest = new PrestationsDAO(BDDconnection.getInstance());
        prestations = prest.find(ipp, noSejour);
        DefaultListModel presta = new DefaultListModel();
        prestations.forEach((i) -> {
            presta.addElement(i.getPrestation() + "    " + i.getDatePrestation());
        });

        NoSejour id = new NoSejour(employe, patient, this, resultat.get(index));
        id.getjListPrestations().setModel(presta);
        id.setSize(this.getSize());
        id.setLocationRelativeTo(this);
        id.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jListDateMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel DMA;
    private javax.swing.JPanel JPanelEnTeteMedTech;
    private javax.swing.JButton jButtonAccueil;
    private javax.swing.JButton jButtonDeconnexion;
    private javax.swing.JButton jButtonTrier;
    private javax.swing.JLabel jLabel1InfoPatients;
    private javax.swing.JLabel jLabel1Nomp;
    private javax.swing.JLabel jLabel1Nosejour;
    private javax.swing.JLabel jLabel1Prenom;
    private javax.swing.JLabel jLabel2DateDeNaissance;
    private javax.swing.JLabel jLabel2Nom;
    private javax.swing.JLabel jLabel2PrenomP;
    private javax.swing.JLabel jLabel2Sexe;
    private javax.swing.JLabel jLabel2Type;
    private javax.swing.JLabel jLabel3Date;
    private javax.swing.JLabel jLabel3Sexep;
    private javax.swing.JLabel jLabel4DateP;
    private javax.swing.JLabel jLabelFonction;
    private javax.swing.JLabel jLabelNomPmed;
    private javax.swing.JLabel jLabelPrenomPmed;
    private javax.swing.JLabel jLabelService;
    private javax.swing.JList<String> jListDate;
    private javax.swing.JList<String> jListNoSejour;
    private javax.swing.JList<String> jListType;
    private javax.swing.JScrollPane jScrollPane1ListeSejour;
    private javax.swing.JScrollPane jScrollPane2ListeType;
    private javax.swing.JScrollPane jScrollPane3ListeDate;
    private javax.swing.JLabel listech;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the jListDate
     */
    public javax.swing.JList<String> getjListDate() {
        return jListDate;
    }

    /**
     * @param jListDate the jListDate to set
     */
    public void setjListDate(javax.swing.JList<String> jListDate) {
        this.jListDate = jListDate;
    }

    /**
     * @return the jListNoSejour
     */
    public javax.swing.JList<String> getjListNoSejour() {
        return jListNoSejour;
    }

    /**
     * @param jListNoSejour the jListNoSejour to set
     */
    public void setjListNoSejour(javax.swing.JList<String> jListNoSejour) {
        this.jListNoSejour = jListNoSejour;
    }

    /**
     * @return the jListType
     */
    public javax.swing.JList<String> getjListType() {
        return jListType;
    }

    /**
     * @param jListType the jListType to set
     */
    public void setjListType(javax.swing.JList<String> jListType) {
        this.jListType = jListType;
    }

}
